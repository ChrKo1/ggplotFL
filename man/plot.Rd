% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\docType{methods}
\name{plot,FLQuant,missing-method}
\alias{plot,FLQuant,missing-method}
\alias{plot,FLQuants,missing-method}
\alias{plot,FLSR,missing-method}
\alias{plot,FLSRs,ANY-method}
\alias{plot,FLSRs,missing-method}
\alias{plot,FLStock,FLPar-method}
\alias{plot,FLStock,missing-method}
\alias{plot,FLStocks,FLPar-method}
\alias{plot,FLStocks,missing-method}
\title{ggplot versions of FLR class plot() methods}
\usage{
\S4method{plot}{FLQuant,missing}(x, main = "", xlab = "", ylab = "",
  na.rm = TRUE, probs = c(0.1, 0.25, 0.5, 0.75, 0.9), type = 7)

\S4method{plot}{FLQuants,missing}(x, main = "", xlab = "", ylab = "",
  probs = c(0.1, 0.25, 0.5, 0.75, 0.9), na.rm = TRUE, type = 7,
  fill = "red", colour = fill)

\S4method{plot}{FLStock,missing}(x, main = "", xlab = "", ylab = "", ...)

\S4method{plot}{FLStocks,missing}(x, main = "", xlab = "", ylab = "",
  na.rm = TRUE, foo = function(y) FLQuants(Rec = rec(y), SSB = ssb(y), Catch
  = catch(y), Harvest = fbar(y)))

\S4method{plot}{FLStocks,FLPar}(x, y, main = "", xlab = "", ylab = "",
  na.rm = TRUE, foo = function(x, y) FLQuants(SSB = ssb(x)/y[, "ssb", ], F =
  fbar(x)/y[, "harvest", ], Catch = catch(x)))

\S4method{plot}{FLStock,FLPar}(x, y, ...)

\S4method{plot}{FLSR,missing}(x, y, ...)

\S4method{plot}{FLSRs,ANY}(x, legend_label = eqlabel, ...)
}
\arguments{
\item{x}{Variable on x axis.}

\item{main}{Title of plot.}

\item{xlab}{Label of x axis.}

\item{ylab}{Label of y axis.}

\item{na.rm}{Should NAs be deleted in quantile calculations?, defaults to TRUE.}

\item{probs}{Quantiles to be plotted if object has iters, defaults to c(0.10, 0.25, 0.50, 0.75, 0.90).}

\item{type}{Type of quantile calculated, see \code{\link[stats]{quantile}}. Defaults to 7.}

\item{fill}{Colour to be used for filling of quantile poligons, defaults to 'red'.}

\item{colour}{Colour to be used for last quantile lines, defaults to fill.}

\item{...}{Other arguments to be passed to the corresponding ggplot call.}

\item{foo}{FlQuants computed from complex objects (e.g. FLStock)}

\item{y}{Variable on y axis.}

\item{legend_label}{function to create the legend labels}
}
\description{
New basic plot methods for some FLR classes are defined in ggplotFL.
}
\examples{

 # Plot a single FLQuant
 data(ple4)
 plot(catch.n(ple4))

 # Plot an FLQuant with iters, shows quantiles
 flq <- rnorm(100, catch(ple4), 60000)
 plot(flq)

 # Specify quantiles, default is c(0.10, 0.25, 0.50, 0.75, 0.90)
 plot(flq, probs=c(0.05, 0.40, 0.50, 0.60, 0.95))
 

 # Plot an FLQuants created from ple4 FLStock
 data(ple4)
 plot(FLQuants(SSB=ssb(ple4), rec=rec(ple4)))
 

 # plot of an FLStock
 data(ple4)
 plot(ple4)


 # plot for FLStocks
 data(ple4)
 pls <- FLStocks(runA=ple4, runB=qapply(ple4, function(x) x*1.10))
 plot(pls)
 

 # plot for FLStocks
 data(ple4)
 pls <- FLStocks(runA=ple4, runB=qapply(ple4, function(x) x*1.10))
 plot(pls)
 

 # plot for FLStock, FLPar
 data(ple4)
 rps <- FLPar(Harvest=0.14, Catch=1.29e5, Rec=9.38e5, SSB=1.8e5)
 plot(ple4, rps)
 

 # plot for FLSR
 data(nsher)
 plot(nsher)
 

 # plot for FLSRs
 data(nsher)
 srs <- FLSRs(sapply(c('ricker', 'bevholt'), function(x) {
   y <- nsher
   model(y) <- x
   return(fmle(y))
 }))
 plot(srs)
 
 plot(srs, legend_label=modlabel)

}

